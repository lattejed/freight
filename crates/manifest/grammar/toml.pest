// Copyright (c) 2023 Matthew Wiriyathananon-Smith
//
// Licensed under the Apache License, Version 2.0
// <LICENSE-APACHE or http://www.apache.org/licenses/LICENSE-2.0> or the MIT
// license <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. All files in the project carrying such notice may not be copied,
// modified, or distributed except according to those terms.

document = _{
                SOI 
                ~ (
                    (
                        NEWLINE*
                        ~ line
                        ~ (NEWLINE* ~ line)*
                        ~ NEWLINE*
                    )
                    |
                    nothing
                  )
                ~ 
                EOI 
            }

line = _{
            (item ~ trailing_comment?)
            |
            line_comment
        }

item = _{ 
            table
            |
            array_table
            | 
            key_value 
        }

key_value = { key ~ "=" ~ value }

key         =  { basic_key ~ ("." ~ basic_key)* }
basic_key   = @{ string | literal | identifier }

value = _{ 
            inline_table 
            | 
            array
            |
            multi_line_literal
            | 
            literal 
            |
            multi_line_string
            |
            string  
         }

table = { 
            "[" ~ key ~ "]" ~ trailing_comment? ~ NEWLINE?
            ~ (
                table_section 
                |
                (key_value ~ trailing_comment? ~ NEWLINE)
                |
                NEWLINE
              )*
        }

table_section = {
                    (table_header ~ NEWLINE)
                    ~ 
                    (key_value ~ trailing_comment? ~ NEWLINE)*
                }

array_table = {
                "[[" ~ key ~ "]]" ~ trailing_comment? ~ NEWLINE?
                ~ (
                    (key_value ~ trailing_comment? ~ NEWLINE)
                    |
                    (line_comment ~ NEWLINE)
                    |
                    NEWLINE
                )*
              }

array = {
            "[" 
            ~ (trailing_comment ~ NEWLINE)?
            ~ (
                (
                    value 
                    ~ ("," ~ trailing_comment? ~ value)* 
                    ~ ","? 
                    ~ (trailing_comment ~ NEWLINE)?
                )
                |
                (line_comment ~ NEWLINE)
                |
                NEWLINE
              )*
            ~ 
            "]"
        }

inline_table = { "{" ~ key_value ~ ("," ~ key_value)* ~ "}" | "{" ~ "}" }

table_header        =  { comment }
trailing_comment    =  { comment }
line_comment        =  { comment }
comment             = _{ "#" ~ (!NEWLINE ~ ANY)* }

multi_line_literal  = @{ "'"{3,} ~ (!"'"{3,} ~ ANY)* ~ "'"{3,} }
literal             = @{ "'" ~ (!"'" ~ ANY)* ~ "'" }

multi_line_string   = @{ "\""{3,} ~ (!"\""{3,} ~ ANY)* ~ "\""{3,} }
string              = @{ "\"" ~ string_inner ~ "\"" }

string_inner        = @{ 
                       (
                           !("\"" | "\\" | "\u{0000}" | "\u{001F}") 
                           ~ ANY
                       )* 
                       ~ (escape ~ string_inner)? 
                      }
escape              = @{ 
                       "\\" 
                       ~ ("b" | "t" | "n" | "f" | "r" | "\"" | "\\" | unicode | NEWLINE)? 
                      }
unicode             = @{ "u" ~ ASCII_HEX_DIGIT{4} | "U" ~ ASCII_HEX_DIGIT{8} }

identifier = @{ (ASCII_ALPHANUMERIC | "_" | "-")+ }

other = @{ (ASCII_ALPHANUMERIC | " " | ":" | "-" | "_" | "." | "+")+ }

nothing     = _{ NEWLINE* }
WHITESPACE  = _{ " " | "\t" }
